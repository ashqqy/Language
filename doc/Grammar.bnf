//----------------------------------------------------------------------------

Main Rules
    <PROGRAM>             ::= { <TOP_LEVEL> }
    <TOP_LEVEL>           ::= ( <FUNCTION_DEFINITION> | <VARIABLE_ASSIGNMENT> )
    <FUNCTION_DEFINITION> ::= <TYPE> <IDENTIFIER> "(" <DEFINITION_ARGUMENTS> ")" "{" <STATEMENTS> "}"
    <VARIABLE_ASSIGNMENT> ::= [ <TYPE> ] <ASSIGNMENT> ";"
    <STATEMENTS>          ::= { <STATEMENT> }
    <STATEMENT>           ::= ( <VARIABLE_ASSIGNMENT> | <IF> | <WHILE> | <FUNCTION_CALL> | <RETURN> | <PRINT> | <INPUT>)

Statement rules
    <IF>            ::= "if"    "(" <BOOL> ")" "{" { <STATEMENT> } "}" [ "else" "{" { <STATEMENT> } "}" ]
    <WHILE>         ::= "while" "(" <BOOL> ")" "{" { <STATEMENT> } "}"
    <FUNCTION_CALL> ::= <IDENTIFIER>  "(" <CALL_ARGUMENTS> ")" ";"
    <RETURN>        ::= "return" <EXPRESSION> ";"
    <PRINT>         ::= "print" "(" <EXPRESSION> ")"
    <INPUT>         ::= "input" "(" <IDENTIFIER> ")"

Expression rules
    <BOOL_EXPRESSION> ::= <EXPRESSION> [ <COMPARE_OPERATOR> <EXPRESSION> ]

    <EXPRESSION> ::= <TERM>    [ ( "+" | "-" ) <EXPRESSION> ]
    <TERM>       ::= <PRIMARY> [ ( "*" | "/" ) <TERM> ]
    <PRIMARY>    ::= ( "(" <EXPRESSION> ")" | <IDENTIFIER> | <CONSTANT> )
    <CONSTANT>   ::= constant

Support rules
    <ASSIGNMENT>           ::= <IDENTIFIER> "=" <EXPRESSION>
    <CALL_ARGUMENTS>       ::= { <EXPRESSION> { "," <EXPRESSION> } }
    <DEFINITION_ARGUMENTS> ::= { <TYPE> <IDENTIFIER> { "," <TYPE> <IDENTIFIER> } }
    <TYPE>                 ::= ( "void" | "double" )
    <COMPARE_OPERATOR>     ::= ( "==" | "<" | ">" | "<=" | ">=" | "!=" )
    <IDENTIFIER>           ::= identifier

//----------------------------------------------------------------------------

// TODO

// 1. Bool
// <BOOL_EXPRESSION> ::= <BOOL_AND> { "||" <BOOL_AND> }
// <BOOL_AND>        ::= <BOOL_NOT> { "&&" <BOOL_NOT> }
// <BOOL_NOT>        ::= "!" { <BOOL_COMPARE> }
// <BOOL_COMPARE>    ::= <BOOL_PRIMARY> [ ( "==" | "!=" | "<" | ">" | "<=" | ">=" ) <BOOL_PRIMARY> ]
// <BOOL_PRIMARY>    :: = ( "(" <BOOL_EXPRESSION> ")" | <CONSTANT> | <IDENTIFIER> )

// 2. Detailed description
// <Constant>   ::= [ "-" ] { <Digit> }+ ["." { <Digit> }+ ]
// <IDENTIFIER>       ::= { <Letter> }

// <Digit> ::= "0"-"9"
// <Letter> ::= { ("A"-"Z" | "a"-"z" ) }
// <Symbol> ::= ( "(" | ")" | ";" | "=" | "-" | "." )

//----------------------------------------------------------------------------
